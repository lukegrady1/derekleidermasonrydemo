name: Deploy to GitHub Pages

on:
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: next

      - name: Install dependencies
        run: npm ci

      - name: Build with Next.js
        run: |
          echo "Starting Next.js build..."
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
          echo "Current directory: $(pwd)"
          echo "Directory contents before build:"
          ls -la
          
          # Check if environment variable is set
          if [ -z "$NEXT_PUBLIC_GOOGLE_MAPS_API_KEY" ]; then
            echo "⚠️  Warning: NEXT_PUBLIC_GOOGLE_MAPS_API_KEY not set, using placeholder"
            export NEXT_PUBLIC_GOOGLE_MAPS_API_KEY="placeholder-key-for-build"
          else
            echo "✅ NEXT_PUBLIC_GOOGLE_MAPS_API_KEY is set"
          fi
          
          # Run the build and capture both stdout and stderr
          npm run build 2>&1 | tee build.log
          BUILD_EXIT_CODE=${PIPESTATUS[0]}
          
          echo "Build exit code: $BUILD_EXIT_CODE"
          
          if [ $BUILD_EXIT_CODE -ne 0 ]; then
            echo "❌ Build failed with exit code $BUILD_EXIT_CODE"
            echo "Build log:"
            cat build.log
            exit $BUILD_EXIT_CODE
          else
            echo "✅ Build completed successfully"
          fi
        env:
          NEXT_PUBLIC_GOOGLE_MAPS_API_KEY: ${{ secrets.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY }}

      - name: Verify build output
        run: |
          echo "Checking build output..."
          echo "Directory contents after build:"
          ls -la
          
          if [ -d "out" ]; then
            echo "✅ out directory found"
            echo "Contents of out directory:"
            ls -la out/
            echo "Sample files in out:"
            find out -name "*.html" | head -5
            
            # Verify index.html exists and has content
            if [ -f "out/index.html" ]; then
              echo "✅ index.html exists"
              echo "Size: $(wc -c < out/index.html) bytes"
              echo "First few lines:"
              head -10 out/index.html
            else
              echo "❌ index.html missing"
              exit 1
            fi
          else
            echo "❌ out directory not found!"
            echo "Available directories:"
            ls -la | grep "^d"
            exit 1
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
